# Generated by Django 5.1.4 on 2025-02-12 04:02

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=255, verbose_name='Mijoz nomi')),
                ('passport_file', models.FileField(upload_to='client-passports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'png'])], verbose_name='Passport file')),
                ('work_name', models.CharField(max_length=255, verbose_name='Ish faoliyati nomi')),
                ('direktor', models.CharField(max_length=255, verbose_name='Direktor ism familiyasi')),
                ('location', models.CharField(max_length=255, verbose_name='Yuridik manzil')),
                ('client_stir', models.CharField(max_length=15, verbose_name='Stir kodi')),
                ('mfo', models.CharField(max_length=10, verbose_name='MFO')),
                ('schot_number', models.CharField(max_length=20, verbose_name='Hisob raqami')),
            ],
            options={
                'verbose_name': "Mijoz qo'shish",
                'verbose_name_plural': "Mijozlarni qo'shish",
            },
        ),
        migrations.CreateModel(
            name='GostParametr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parametr_name', models.CharField(max_length=250, verbose_name='Parametr nomi')),
            ],
            options={
                'verbose_name': 'Gost parametrlari',
                'verbose_name_plural': 'Gost parametrlari',
            },
        ),
        migrations.CreateModel(
            name='Sklad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255, verbose_name='Tovar nomi')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='Ishlab chiqaruvchi')),
                ('parametr', models.CharField(max_length=255, verbose_name='Paramaetrlari')),
                ('certificate', models.FileField(upload_to='certificate/')),
                ('birlik', models.CharField(choices=[('kg', 'kg'), ('gr', 'gr'), ('m2', 'm2'), ('mg', 'mg'), ('m3', 'm3')], max_length=10, verbose_name='Birligi')),
                ('quantity', models.IntegerField(verbose_name='Qiymati')),
                ('start_date', models.DateField(verbose_name='Ishlab chiqarilgan sana')),
                ('end_date', models.DateField(verbose_name='Tugash muddati')),
                ('add_date', models.DateField(auto_now=True)),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Ombor',
                'verbose_name_plural': 'Omborxona',
            },
        ),
        migrations.CreateModel(
            name='TekshiruvKurinishi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Вид испытания')),
                ('measure', models.CharField(choices=[('kg', 'kg'), ('gr', 'gr'), ('m2', 'm2'), ('mg', 'mg'), ('m3', 'm3')], max_length=10, verbose_name='Единица измерения')),
                ('ammount', models.CharField(max_length=255, verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Tekshiruv',
                'verbose_name_plural': "Tekshiruv ko'rinishlari",
            },
        ),
        migrations.CreateModel(
            name='UlchovAsbob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование средств измерений и испытательных оборудований:')),
                ('ser', models.CharField(max_length=255, verbose_name='Наименование средств измерений и испытательных оборудований: Сертификаты поверки/калибровки или аттестации')),
            ],
            options={
                'verbose_name': "O'lchov asboblari / sertifikatlari",
                'verbose_name_plural': "O'lchov asboblari / sertifikatlari",
            },
        ),
        migrations.CreateModel(
            name='ClientCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='guvohnomalar/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'png'])], verbose_name='Guvohnoma')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates_list', to='core.client')),
            ],
            options={
                'verbose_name': 'Mijoz guvohnomalari',
                'verbose_name_plural': 'Mijozlarning guvohnomalari',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='certificates',
            field=models.ManyToManyField(blank=True, null=True, related_name='clients', to='core.clientcertificate', verbose_name='Guvohnomalar'),
        ),
        migrations.CreateModel(
            name='ClientProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=255, verbose_name='Maxsulot nomi')),
                ('product_quantity', models.IntegerField(verbose_name='Maxsulot qiymati')),
                ('product_unity', models.CharField(choices=[('kg', 'kg'), ('gr', 'gr'), ('m2', 'm2'), ('mg', 'mg'), ('m3', 'm3')], max_length=10, verbose_name='Birligi')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.client')),
            ],
            options={
                'verbose_name': 'Mijoz maxsulotlari',
                'verbose_name_plural': 'Mijozlar maxsuloti',
            },
        ),
        migrations.CreateModel(
            name='Gost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_code', models.CharField(max_length=250, verbose_name='Pozitsiya kodi')),
                ('gost_name', models.CharField(max_length=250, verbose_name='Gost nomi')),
                ('test_gost', models.CharField(max_length=250, verbose_name='Briktirilgan test sinovi')),
                ('test_code', models.CharField(max_length=250, verbose_name='Test kodi')),
                ('parametr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gostparametr', verbose_name='Parametr nomi')),
            ],
            options={
                'verbose_name': 'Gost',
                'verbose_name_plural': 'Gostlar',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_quantity', models.IntegerField(verbose_name='Xizmat qiymati')),
                ('value', models.CharField(choices=[('kg', 'Kilogram'), ('gr', 'Gram'), ('m2', 'Square Meter'), ('mg', 'Milligram'), ('m3', 'Cubic Meter')], max_length=50, verbose_name='Qiymatni tanlang')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.client', verbose_name='Mijozlar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sklad', verbose_name='Maxsulotlar')),
            ],
            options={
                'verbose_name': 'Servis',
                'verbose_name_plural': 'Servis xizmatlar',
            },
        ),
        migrations.CreateModel(
            name='Shartnoma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ishlabchiqaruvchi', models.CharField(max_length=255, verbose_name='Наименование изготовителя ')),
                ('maqsad', models.CharField(max_length=255, verbose_name='Цель, задачи и вид испытаний')),
                ('malumot', models.CharField(max_length=255, verbose_name='Информация об отборе образцов')),
                ('nd_obyekt', models.CharField(max_length=255, verbose_name='НД на объекты испытания')),
                ('nd_metod', models.CharField(max_length=255, verbose_name='НД на методы испытания')),
                ('sinov_shartlari', models.CharField(max_length=255, verbose_name='Условия проведения испытаний')),
                ('qabul_date', models.DateField(verbose_name='Дата получения образцов')),
                ('protocol_date', models.DateField(verbose_name='Shartnoma tuzilgan vaqt')),
                ('qushimcha', models.CharField(max_length=255, verbose_name='Дополнительная информация')),
                ('information', models.CharField(max_length=255, verbose_name='Информация о субподрядных работах')),
                ('sinov_sanasi', models.DateField(verbose_name='Дата проведения испытания')),
                ('imzo_sanasi', models.DateField(verbose_name='Дата подписания протокола')),
                ('nd_talab_qiymat', models.CharField(max_length=255, verbose_name='Значения требования по НД')),
                ('fakt_qiymati', models.CharField(max_length=255, verbose_name='Фактическое Значения')),
                ('unique_id', models.CharField(editable=False, max_length=9, unique=True)),
                ('qr_code', models.ImageField(blank=True, editable=False, null=True, upload_to='qr_codes/')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.client', verbose_name='Наименование заказчика')),
                ('client_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.clientproduct', verbose_name='Наименование продукции')),
                ('gost', models.ManyToManyField(to='core.gost', verbose_name='Gost')),
                ('parametr', models.ManyToManyField(to='core.gostparametr', verbose_name='Gost parametr')),
                ('sklad', models.ManyToManyField(to='core.sklad', verbose_name='Sklad')),
                ('tekshiruv_kurinishi', models.ManyToManyField(to='core.tekshiruvkurinishi', verbose_name='Вид испытания')),
                ('sertifikatlash', models.ManyToManyField(related_name='shartnoma_sertifikatlash', to='core.ulchovasbob', verbose_name='Сертификаты поверки/калибровки или аттестации')),
                ('ulchov_asbob', models.ManyToManyField(related_name='shartnoma_ulchov_asbob', to='core.ulchovasbob', verbose_name='Наименование средств измерений и испытательных оборудований:')),
            ],
            options={
                'verbose_name': 'Shartnoma',
                'verbose_name_plural': 'Shartnomalar',
            },
        ),
    ]
